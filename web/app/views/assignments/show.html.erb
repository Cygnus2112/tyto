<div class="row assignment-header">
  <div class="small-12 medium-6 columns">
    <p class="small-only-text-center"><%= @assignment.name %>: <%= @assignment.assignment_size %> Problems</p>
  </div>
  <div class="small-12 medium-6 columns">
    <div id="progress"></div>
  </div>
</div>
<div class="body-container">
  <div class="row">
    <div class="small-12 large-8 columns">
      <div id="question">
      </div>
    </div>
    <div class="small-12 large-4 columns">
      <div class="row">
        <div class="small-12 medium-6 large-12 columns">
          <div id="chart"></div>
        </div>
        <div class="small-12 medium-6 large-12 columns">
          <div id="streaks"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="http://fb.me/JSXTransformer-0.10.0.js"></script>
<script type="text/jsx">
/** @jsx React.DOM **/
(function () {
  window.assignment = new Assignment(<%= @assignment.to_json.html_safe %>);
  var questionForm = React.renderComponent(
    <QuestionForm />,
    document.getElementById('question')
  );
  var progress = React.renderComponent(
    <Progress />,
    document.getElementById('progress')
  );
  var streaks = React.renderComponent(
    <Streaks />,
    document.getElementById('streaks')
  );

  var data = {
    series1: [ { x: 0, y: 20 }, { x: 1, y: 30 }, { x: 2, y: 10 }, { x: 3, y: 5 }, { x: 4, y: 8 }, { x: 5, y: 15 }, { x: 6, y: 10 } ],
    series2: [ { x: 0, y: 8 }, { x: 1, y: 5 }, { x: 2, y: 20 }, { x: 3, y: 12 }, { x: 4, y: 4 }, { x: 5, y: 6 }, { x: 6, y: 2 } ],
    series3: [ { x: 0, y: 0 }, { x: 1, y: 5 }, { x: 2, y: 8 }, { x: 3, y: 2 }, { x: 4, y: 6 }, { x: 5, y: 4 }, { x: 6, y: 2 } ]
  };
  var chart = React.renderComponent(
    <LineChart />,
    document.getElementById('chart')
  );

  var presenter = new AssignmentPresenter({
    model: assignment,
    questionForm: questionForm,
    chart: chart,
    progress: progress,
    streaks: streaks
  });
})();
</script>
