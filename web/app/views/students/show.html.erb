<div class="row button-header">
  <ul id="filters" class="button-group">
    <li><a data-filter="*" href="#" class="button small">Show all</a></li>
    <li><a data-filter=".complete" href="#" class="button small">Complete</a></li>
    <li><a data-filter=".incomplete" href="#" class="button small">Incomplete</a></li>
  </ul>
</div>
<div class="body-container">
  <div class="row" data-equalizer>
    <div class="small-12 medium-9 large-10 columns">
      <ul class="small-block-grid-1 medium-block-grid-2 large-block-grid-3 isotope-container">
        <% @assignments.each do |assignment| %>
          <li class="assignment-li <% if !assignment.complete %>in<% end %>complete" data-equalizer-watch>
            <%= link_to tyto_assignment_path(assignment.id) do %>
              <div class="assignment-container <% if assignment.complete %>green<% end %>">
                <p class="course-name"><%= assignment.course_name %></p>
                <p class="assignment-name"><%= assignment.name %></p>
                <p class="questions-complete"><%= assignment.questions_answered %>/<%= assignment.assignment_size %></p>
                <div class="progress small-12 success round">
                  <span class="meter" style="width: <%= [assignment.proficiency, 1].min * 100 %>%"></span>
                </div>
              </div>
            <% end %>
          </li>
        <% end %>
      </ul>
    </div>
    <div class="small-12 medium-3 large-2 columns">
      <% @classrooms.each do |classroom| %>
        <p><%= classroom.name %></p>
      <% end %>
      <% @invites.each do |invite| %>
        <p><%= invite.course_name %></p>
        <p><%= invite.teacher_name %></p>
        <%= form_tag("/invites/#{invite.id}", method: 'patch') do %>
          <% submit_tag "Accept Invite", class: "button" %>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<script src="http://fb.me/JSXTransformer-0.10.0.js"></script>
<script type="text/jsx">
/** @jsx React.DOM **/
(function () {
  window.assignment = new Assignment(<%= @assignment.to_json.html_safe %>);
  var questionForm = React.renderComponent(
    <QuestionForm />,
    document.getElementById('question')
  );
  var chart = React.renderComponent(
    <Chart />,
    document.getElementById('chart')
  );
  var progress = React.renderComponent(
    <Progress />,
    document.getElementById('progress')
  );
  var streaks = React.renderComponent(
    <Streaks />,
    document.getElementById('streaks')
  );
  var presenter = new StudentPresenter({
    model: assignment,
    questionForm: questionForm,
    chart: chart,
    progress: progress,
    streaks: streaks
  });
})();
</script>
